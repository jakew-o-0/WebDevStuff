package templates

import "fmt"
import "t2/internal/database"


type AttractionsParams struct {
    Attractions []database.Attraction
    Page int
}

templ (p Page) AttractionsComp(a AttractionsParams) {

    for i,at := range a.Attractions {
        if i >= len(a.Attractions)-1 {
            <article 
                hx-get={ fmt.Sprintf("/attractions/%d", a.Page) } 
                hx-trigger="revealed"
                hx-target="main"
                hx-swap="beforeend"
            >
                <hgroup>
                    <h1>{ at.Title }</h1>
                    <p>{ at.Content }</p>
                </hgroup>
            </article>
        } else {
            <article>
                <hgroup>
                    <h1>{ at.Title }</h1>
                    <p>{ at.Content }</p>
                </hgroup>
            </article>
        } 
    }
}

templ (p Page) AttractionsPage(a AttractionsParams) {
    @p.base() {
        <hgroup>
            <h1>Attractions</h1>
        </hgroup>
        @p.AttractionsComp(a)
    }
}



type FacilitiesParams struct {
    Attractions []database.Facility
    Page int
}

templ (p Page) FacilitiesComp(a FacilitiesParams) {

    for i,at := range a.Attractions {
        if i >= len(a.Attractions)-1 {
            <article 
                hx-get={ fmt.Sprintf("/facilities/%d", a.Page) } 
                hx-trigger="revealed"
                hx-target="main"
                hx-swap="beforeend"
            >
                <hgroup>
                    <h1>{ at.Title }</h1>
                    <p>{ at.Content }</p>
                </hgroup>
            </article>
        } else {
            <article>
                <hgroup>
                    <h1>{ at.Title }</h1>
                    <p>{ at.Content }</p>
                </hgroup>
            </article>
        } 
    }
}

templ (p Page) FacilitiesPage(a FacilitiesParams) {
    @p.base() {
        <hgroup>
            <h1>Attractions</h1>
        </hgroup>
        @p.FacilitiesComp(a)
    }
}
