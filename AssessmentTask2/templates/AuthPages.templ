package templates

templ (p Page) LoginPageComp() {
    <article>
        <header>
            <h1>Login</h1>
        </header>
        <form hx-post="/auth/login" hx-target="article" hx-swap="outerHTML">
            <section>
                if _,ok := p.Errors["Err"]; ok {
                    <input type="text" name="email" placeholder="Email:" aria-invalid="true" aria-describedby="#emailHelper"/>
                    <small id="emailHelper">{ p.Errors["Err"] }</small>

                    <input type="Password" name="password" placeholder="Password:" aria-invalid="true" aria-describedby="#passHelper"/>
                    <small id="passHelper">{ p.Errors["Err"] }</small>

                } else {
                    <input type="text" name="email" placeholder="Email:"/>
                    <input type="Password" name="password" placeholder="Password:"/>
                }
            </section>

            <div class="grid">
                <input type="submit" value="Login"/>
                <input type="button" value="Sign Up" class="secondary"/>
            </div>
        </form>
    </article>
}

templ (p Page) LoginPage() {
    @p.base() {
        @p.LoginPageComp()
    }
}

templ (p Page) SignupPageComp() {
    <article>
        <header>
            <h1>Sign Up</h1>
        </header>
        <form hx-post="/auth/signup" ht-target="article" hx-swap="outerHTML">
            if _,ok := p.Errors["FirstName"]; ok {
                <section>
                    <input type="text" name="firstName" placeholder="First Name:" aria-invalid="true" aria-describedby="#fnameHelper"/>
                    <small id="fnameHelper">{ p.Errors["FirstName"] }</small>
                    <input type="text" name="lastName" placeholder="Last Name:" aria-invalid="true" aria-describedby="#lnameHelper"/>
                    <small id="lnameHelper">{ p.Errors["LastName"] }</small>
                </section>
            } else {
                <section>
                    <input type="text" name="firstName" placeholder="First Name:"/>
                    <input type="text" name="lastName" placeholder="Last Name:"/>
                </section>
            }

            if _,ok := p.Errors["Email"]; ok {
                <section>
                    <input type="text" name="email" placeholder="Email:" aria-invalid="true" aria-describedby="#emailHelper"/>
                    <small id="emailHelper">{ p.Errors["Email"] }</small>
                </section>
            } else {
                <section>
                    <input type="text" name="email" placeholder="Email:"/>
                </section>
            }

            if _,ok := p.Errors["Password"]; ok {
                <section>
                    <input type="Password" name="password" placeholder="Password:" aria-invalid="true" aria-describedby="#passHelper"/>
                    <small id="passHelper">{ p.Errors["Password"] }</small>
                    <input type="Password" name="confPassword" placeholder="Confirm Password:" aria-invalid="true" aria-describedby="#confPassHelper"/>
                    <small id="confPassHelper">{ p.Errors["ConfPassword"] }</small>
                </section>
            } else {
                <section>
                    <input type="Password" name="password" placeholder="Password:"/>
                    <input type="Password" name="confPassword" placeholder="Confirm Password:"/>
                </section>
            }

            <div class="grid">
                <input type="submit" value="Sign Up"/>
                <input type="button" value="Login" class="secondary"/>
            </div>
        </form>
    </article>
}

templ (p Page) SignupPage() {
    @p.base() {
        @p.SignupPageComp()
    }
}
