package templates

type Base struct{
    FlashMessage string
    LoggedIn bool
    Errors map[string]string
}

templ (b Base) baseContent() {
<!DOCTYPE html>
<html lang="en">
    <head>
        <title>Test App</title>
        <meta charset="UTF-8"/>
        <meta name="viewport" content="width=device-width, initial-scale=1"/>
        <link
            rel="stylesheet"
            href="https://cdn.jsdelivr.net/npm/@picocss/pico@2/css/pico.pink.min.css"
        />
        <link
        rel="stylesheet"
        href="https://cdn.jsdelivr.net/npm/@picocss/pico@2/css/pico.colors.min.css"
        />
        <script src="https://unpkg.com/htmx.org@1.9.10" integrity="sha384-D1Kt99CQMDuVetoL1lrYwg5t+9QdHe7NLX/SoJYkXDFfX37iInKRy5xLSi8nO7UC" crossorigin="anonymous"></script>
    </head>
    <body>
        <header style="padding-top:0; position:sticky; top:0;">
            @b.header()
        </header>

        <main class="container">
            { children... }
        </main>
    </body>
</html>
}


templ (b Base) header() {
<article>
    <nav class="container">
        <ul>
            <li>
                <a href="/"><h1>Website Title</h1></a>
            </li>
        </ul>

        <ul>
            if !b.LoggedIn {
                <li><a href="/auth/login">Login</a></li>
                <li><a href="/auth/signup">Signup</a></li>
            } else {
                <li><a href="/posts">Posts</a></li>
                <li><a href="/inbox">Inbox</a></li>
                <li><a hx-post="/auth/logout">Logout</a></li>
            }
        </ul>
    </nav>
</article>

    if b.FlashMessage != "" {
        <div class="container">
            <article 
                id="flash"
                class="pico-background-pink-600"
                hx-on:revealed="deleteFlash();"
            >
                <h2>{ b.FlashMessage }</h2>
                <progress id="prog" value="0" max="100"/>
            </article>
        </div>
        <script>
            function sleep(ms) {
                return new Promise(res => setTimeout(res, ms));
            }

            async function deleteFlash() {
                const flash = document.getElementById("flash");
                const progress = document.getElementById("prog")
                const split = 5000 / 100
                for(let i = 0; i <= 100; i++) {
                    progress.setAttribute("value", i)
                    await sleep(split);
                }
                flash.remove();
            }
            deleteFlash();
        </script>
    }
}
